// Pattern prinitng
// 1. Nested loops
// 2. Outer loops for the rows and inner loops for column
// 3. Outer loops for the no. of lines
// 4. for inner loops focus on columns and connect them to rows
// 5. Print them whatever ("*" , "a" , numbers) inside the inner for loops.
//6. Observe symmetry [optional]

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// // Example 1:
// // let N1 = 3;
// // Output:
// // * * *
// // * * *
// // * * *

// // Example 2:
// let N1 = 6;
// // Output:
// // * * * * * *
// // * * * * * *
// // * * * * * *
// // * * * * * *
// // * * * * * *
// // * * * * * *

// const pattern1 = (N1) => {
//   for (let i = 0; i < N1; i++) {
//     let row = "";
//     for (let j = 0; j < N1; j++) {
//       row += "* ";
//     }

//     console.log(row);
//   }
// };

// pattern1(N1);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// // let N2 = 3;
// // Result:
// // *
// // * *
// // * * *

// let N2 = 6;
// // Result:
// // *
// // * *
// // * * *
// // * * * *
// // * * * * *
// // * * * * * *

// const pattern2 = (N2) => {
//   for (let i = 1; i <= N2; i++) {
//     let row = "";
//     for (let j = 1; j <= i; j++) {
//       row += "* ";
//     }

//     console.log(row);
//   }
// };
// pattern2(N2);

// // Left side facing triangle
// const pattern2 = (N2) => {
//   let space = N2 - 1;
//   for (let i = 1; i <= N2; i++) {
//     let row = "";

//     //space
//     for (let j = 1; j <= space; j++) {
//       row += " ";
//     }

//     // numbers
//     for (let j = i; j >= 1; j--) {
//       row += "*";
//     }

//     console.log(row);
//     space -= 1;
//   }
// };
// pattern2(N2);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// // let N3 = 3
// // Result:
// // 1
// // 1 2
// // 1 2 3

// let N3 = 6;
// // Result:
// // 1
// // 1 2
// // 1 2 3
// // 1 2 3 4
// // 1 2 3 4 5
// // 1 2 3 4 5 6

// const pattern3 = (N3) => {
//   for (let i = 1; i <= N3; i++) {
//     let row = "";
//     for (let j = 1; j <= i; j++) {
//       row += `${j} `;
//     }
//     console.log(row);
//   }
// };
// pattern3(N3);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// let N4 = 3;
// // Result:
// // 1
// // 2 2
// // 3 3 3

// // let N4 = 6;
// // Result:
// // 1
// // 2 2
// // 3 3 3
// // 4 4 4 4
// // 5 5 5 5 5
// // 6 6 6 6 6 6

// const pattern4 = (N4) => {
//   for (let i = 1; i <= N4; i++) {
//     let row = "";
//     for (let j = 1; j <= i; j++) {
//       row += `${i} `;
//     }
//     console.log(row);
//   }
// };
// pattern4(N4);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// // let N5 = 3;
// // Result:
// // * * *
// // * *
// // *

// let N5 = 6;
// // Result:
// // * * * * * *
// // * * * * *
// // * * * *
// // * * *
// // * *
// // *

// // *********  Note :  N - row + 1

// const pattern5 = (N5) => {
//   for (let i = 1; i <= N5; i++) {
//     let row = "";
//     for (let j = 1; j <= N5 - i + 1; j++) {
//       row += "* ";
//     }
//     console.log(row);
//   }
// };

// pattern5(N5);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// // let N6 = 3
// // Result:
// // 1 2 3
// // 1 2
// // 1

// let N6 = 6;
// // Result:
// // 1 2 3 4 5 6
// // 1 2 3 4 5
// // 1 2 3 4
// // 1 2 3
// // 1 2
// // 1

// const pattern6 = (N6) => {
//   for (let i = 1; i <= N6; i++) {
//     let row = "";
//     for (let j = 1; j <= N6 - i + 1; j++) {
//       row += `${j} `;
//     }
//     console.log(row);
//   }
// };

// pattern6(N6);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// // let N7 = 3;
// // Result:
// //   *
// //  ***
// // *****

// let N7 = 6;
// // Result:
// //      *
// //     ***
// //    *****
// //   *******
// //  *********
// // ***********

// // Space = N - i  + 1
// // Stars = 2 * i + 1
// // Space = N - i  + 1

// const pattern7 = (N7) => {
//   for (let i = 0; i < N7; i++) {
//     let row = "";
//     for (let j = 1; j <= N7 - i + 1; j++) {
//       row += ` `;
//     }
//     for (let j = 1; j <= 2 * i + 1; j++) {
//       row += `*`;
//     }
//     for (let j = 1; j <= N7 - i + 1; j++) {
//       row += ` `;
//     }
//     console.log(row);
//   }
// };

// pattern7(N7);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// // let N8 = 3;
// // Result:
// // *****
// //  ***
// //   *

// let N8 = 6;
// // Result:
// // ***********
// //  *********
// //   *******
// //    *****
// //     ***
// //      *

// const pattern8 = (N8) => {
//   //   for (let i = N8; i >= 0; i--) {
//   for (let i = 0; i < N8; i++) {
//     let row = "";
//     // for (let j = 1; j <= N8 - i + 1; j++) {
//     for (let j = 0; j <= i; j++) {
//       row += ` `;
//     }
//     // for (let j = 1; j <= 2 * i + 1; j++) {
//     for (let j = 1; j <= 2 * N8 - (2 * i + 1); j++) {
//       row += `*`;
//     }
//     // for (let j = 1; j <= N8 - i + 1; j++) {
//     for (let j = 0; j <= i; j++) {
//       row += ` `;
//     }
//     console.log(row);
//   }
// };

// pattern8(N8);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// let N9 = 3;
// // Result:
// //   *
// //  ***
// // *****
// // *****
// //  ***
// //   *
// // let N9 = 6
// // Result:
// //      *
// //     ***
// //    *****
// //   *******
// //  *********
// // ***********
// // ***********
// //  *********
// //   *******
// //    *****
// //     ***
// //      *

// const pattern9 = (N9) => {
//   for (let i = 0; i < N9; i++) {
//     let row = "";
//     for (let j = 1; j <= N9 - i + 1; j++) {
//       row += ` `;
//     }
//     for (let j = 1; j <= 2 * i + 1; j++) {
//       row += `*`;
//     }
//     for (let j = 1; j <= N9 - i + 1; j++) {
//       row += ` `;
//     }
//     console.log(row);
//   }
//   for (let i = N9 - 1; i >= 0; i--) {
//     let row = "";
//     for (let j = 1; j <= N9 - i + 1; j++) {
//       row += ` `;
//     }
//     for (let j = 1; j <= 2 * i + 1; j++) {
//       row += `*`;
//     }
//     for (let j = 1; j <= N9 - i + 1; j++) {
//       row += ` `;
//     }
//     console.log(row);
//   }
// };

// pattern9(N9);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// // let N10 = 3
// // Result:
// //   *
// //   **
// //   ***
// //   **
// //   *
// let N10 = 6;
// // Result:
// //      *
// //      **
// //      ***
// //      ****
// //      *****
// //      ******
// //      *****
// //      ****
// //      ***
// //      **
// //      *

// const pattern10 = (N10) => {
//   for (let i = 1; i <= 2 * N10 - 1; i++) {
//     let row = "";
//     let stars = i;
//     if (stars > N10) stars = 2 * N10 - i;

//     for (let j = 0; j < stars; j++) {
//       row += "*";
//     }
//     console.log(row);
//   }
// };

// pattern10(N10);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// // let N11 = 3;
// // Result:
// // 1
// // 01
// // 101

// let N11 = 6;
// // Result:
// // 1
// // 01
// // 101
// // 0101
// // 10101
// // 010101

// const pattern11 = (N11) => {
//   let start = 1;
//   for (let i = 0; i < N11; i++) {
//     let row = "";
//     if (i % 2 === 0) start = 1;
//     else start = 0;
//     for (let j = 0; j <= i; j++) {
//       row += `${start} `;
//       start = 1 - start;
//     }
//     console.log(row);
//   }
// };

// pattern11(N11);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// // let N12 = 3
// // Result:
// // 1    1
// // 12  21
// // 123321

// let N12 = 6;
// // Result:
// // 1          1
// // 12        21
// // 12       321
// // 1234    4321
// // 12345  54321
// // 123456654321

// const pattern12 = (N12) => {
//   let space = 2 * (N12 - 1);
//   for (let i = 1; i <= N12; i++) {
//     let row = "";
//     //numbers
//     for (let j = 1; j <= i; j++) {
//       row += j;
//     }

//     //space
//     for (let j = 1; j <= space; j++) {
//       row += " ";
//     }

//     // numbers
//     for (let j = i; j >= 1; j--) {
//       row += j;
//     }

//     console.log(row);
//     space -= 2;
//   }
// };
// pattern12(N12);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// // let N13 = 3
// // Result:
// // 1
// // 2 3
// // 4 5 6

// let N13 = 6;
// // Result:
// // 1
// // 2  3
// // 4  5  6
// // 7  8  9  10
// // 11  12  13  14  15
// // 16  17  18  19  20  21

// const pattern13 = (N13) => {
//   let count = 1;
//   for (let i = 1; i <= N13; i++) {
//     let row = "";
//     for (let j = 1; j <= i; j++) {
//       row += ` ${count}`;
//       count = count + 1;
//     }
//     console.log(row);
//   }
// };
// pattern13(N13);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// // let N14 = 3
// // Result:
// // A
// // A B
// // A B C

// let N14 = 6;
// // Result:
// // A
// // A B
// // A B C
// // A B C D
// // A B C D E
// // A B C D E F

// const pattern14 = (N14) => {
//   for (let i = 0; i < N14; i++) {
//     let row = "";
//     for (let j = 0; j <= i; j++) {
//       row += String.fromCharCode(65 + j) + " ";
//     }
//     console.log(row);
//   }
// };

// pattern14(N14);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// // let N15 = 3
// // Result:
// // A B C
// // A B
// // A

// let N15 = 6;
// // Result:
// // A B C D E F
// // A B C D E
// // A B C D
// // A B C
// // A B
// // A

// const pattern15 = (N15) => {
//   for (let i = 0; i < N15; i++) {
//     let row = "";
//     for (let j = 0; j <= N15 - i - 1; j++) {
//       row += String.fromCharCode(65 + j) + " ";
//     }
//     console.log(row);
//   }
// };

// pattern15(N15);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// let N16 = 3;
// // Result:
// // A
// // B B
// // C C C

// // let N16 = 6;
// // Result:
// // A
// // B B
// // C C C
// // D D D D
// // E E E E E
// // F F F F F F

// const pattern16 = (N16) => {
//   for (let i = 0; i < N16; i++) {
//     let row = "";
//     for (let j = 0; j <= i; j++) {
//       row += String.fromCharCode(65 + i) + " ";
//     }
//     console.log(row);
//   }
// };

// pattern16(N16);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// // let N17 = 3;
// // Result:
// //   A;
// //  ABA;
// // ABCBA;

// let N17 = 6;
// // Result:
// //      A;
// //     ABA;
// //    ABCBA;
// //   ABCDCBA;
// //  ABCDEDCBA;
// // ABCDEFEDCBA;

// const pattern17 = (N17) => {
//   for (let i = 0; i < N17; i++) {
//     let row = "";

//     //spaces
//     for (let j = 0; j < N17 - i - 1; j++) {
//       row += " ";
//     }

//     // add inc alphabets
//     for (let j = 0; j <= i; j++) {
//       row += String.fromCharCode(65 + j);
//     }
//     // add dec alphabets
//     for (let j = i - 1; j >= 0; j--) {
//       row += String.fromCharCode(65 + j);
//     }

//     //spaces
//     for (let j = 0; j < N17 - i - 1; j++) {
//       row += " ";
//     }
//     console.log(row);
//   }
// };

// pattern17(N17);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// // let N18 = 3;
// // Result:
// // C
// // B C
// // A B C

// let N18 = 6;
// // Result:
// // F
// // E F
// // D E F
// // C D E F
// // B C D E F
// // A B C D E F

// const pattern18 = (N18) => {
//   for (let i = 0; i < N18; i++) {
//     let row = "";

//     for (let j = N18 - i - 1; j < N18; j++) {
//       row += String.fromCharCode(65 + j) + " ";
//     }

//     console.log(row);
//   }
// };

// pattern18(N18);
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// let N19 = 3;
// // Result:
// // ******
// // **  **
// // *    *
// // *    *
// // **  **
// // ******

// // let N19 = 6;
// // Result:
// // ************
// // *****  *****
// // ****    ****
// // ***      ***
// // **        **
// // *          *
// // *          *
// // **        **
// // ***      ***
// // ****    ****
// // *****  *****
// // ************

// const pattern19 = (N19) => {
//   let space1 = 0;
//   for (let i = 0; i < N19; i++) {
//     let row = "";
//     //numbers
//     for (let j = 1; j <= N19 - i; j++) {
//       row += "*";
//     }

//     //space
//     for (let j = 1; j <= space1; j++) {
//       row += " ";
//     }

//     // numbers
//     for (let j = 1; j <= N19 - i; j++) {
//       row += "*";
//     }

//     console.log(row);
//     space1 += 2;
//   }

//   let space2 = 2 * (N19 - 1);
//   for (let i = 1; i <= N19; i++) {
//     let row = "";
//     //numbers
//     for (let j = 1; j <= i; j++) {
//       row += "*";
//     }

//     //space
//     for (let j = 1; j <= space2; j++) {
//       row += " ";
//     }

//     // numbers
//     for (let j = 1; j <= i; j++) {
//       row += "*";
//     }

//     console.log(row);
//     space2 -= 2;
//   }
// };
// pattern19(N19);
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// // let N20 = 3;
// // Result:
// // *    *
// // **  **
// // ******
// // **  **
// // *    *

// let N20 = 6;
// // Result:
// // *          *
// // **        **
// // ***      ***
// // ****    ****
// // *****  *****
// // ************
// // *****  *****
// // ****    ****
// // ***      ***
// // **        **
// // *          *

// const pattern20 = (N20) => {
//   let space2 = 2 * (N20 - 1);
//   for (let i = 1; i <= N20 - 1; i++) {
//     let row = "";
//     //numbers
//     for (let j = 1; j <= i; j++) {
//       row += "*";
//     }

//     //space
//     for (let j = 0; j < space2; j++) {
//       row += " ";
//     }

//     // numbers
//     for (let j = 1; j <= i; j++) {
//       row += "*";
//     }

//     console.log(row);
//     space2 -= 2;
//   }

//   let space1 = 0;
//   for (let i = 0; i < N20; i++) {
//     let row = "";
//     //numbers
//     for (let j = 1; j <= N20 - i; j++) {
//       row += "*";
//     }

//     //space
//     for (let j = 1; j <= space1; j++) {
//       row += " ";
//     }

//     // numbers
//     for (let j = 1; j <= N20 - i; j++) {
//       row += "*";
//     }

//     console.log(row);
//     space1 += 2;
//   }
// };

// pattern20(N20);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// // let N21 = 3;
// // Result:
// // ***
// // * *
// // ***

// let N21 = 6;
// // Result:
// // ******
// // *    *
// // *    *
// // *    *
// // *    *
// // ******

// const pattern21 = (N21) => {
//   for (let i = 0; i < N21; i++) {
//     let row = "";

//     for (let j = 0; j < N21; j++) {
//       if (i === 0 || i === N21 - 1 || j === 0 || j === N21 - 1) row += "*";
//       else row += " ";
//     }

//     console.log(row);
//   }
// };

// pattern21(N21);
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// // let N22 = 3
// // Result:
// // 3 3 3 3 3
// // 3 2 2 2 3
// // 3 2 1 2 3
// // 3 2 2 2 3
// // 3 3 3 3 3

// let N22 = 6;
// // Result:
// // 6 6 6 6 6 6 6 6 6 6 6
// // 6 5 5 5 5 5 5 5 5 5 6
// // 6 5 4 4 4 4 4 4 4 5 6
// // 6 5 4 3 3 3 3 3 4 5 6
// // 6 5 4 3 2 2 2 3 4 5 6
// // 6 5 4 3 2 1 2 3 4 5 6
// // 6 5 4 3 2 2 2 3 4 5 6
// // 6 5 4 3 3 3 3 3 4 5 6
// // 6 5 4 4 4 4 4 4 4 5 6
// // 6 5 5 5 5 5 5 5 5 5 6
// // 6 6 6 6 6 6 6 6 6 6 6

// const pattern22 = (N22) => {
//   let n = 2 * N22 - 1;
//   for (let i = 0; i < n; i++) {
//     let row = "";

//     for (let j = 0; j < n; j++) {
//       let top = i;
//       let left = j;
//       let right = 2 * N22 - 2 - j;
//       let bottom = 2 * N22 - 2 - i;

//       row += N22 - Math.min(Math.min(top, bottom), Math.min(left, right));
//     }

//     console.log(row);
//   }
// };

// pattern22(N22);
